- name: Configurar entorno DevOps
  hosts: all
  become: yes
  vars:
    docker_user: vagrant
    k8s_version: "1.26.2"
  tasks:
    - name: Actualizar el cache de apt (inicial)
      ansible.builtin.apt:
        update_cache: yes

    - name: Instalar dependencias para Docker
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - ca-certificates
        - curl
        - gnupg
        - lsb-release

    - name: Añadir la clave GPG de Docker
      ansible.builtin.shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Añadir el repositorio de Docker
      ansible.builtin.shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Actualizar el cache de apt (después de añadir Docker repo)
      ansible.builtin.apt:
        update_cache: yes

    - name: Instalar Docker, containerd y plugins
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

    - name: Añadir usuario 'vagrant' al grupo 'docker'
      ansible.builtin.user:
        name: "{{ docker_user }}"
        groups: docker
        append: yes

    - name: Habilitar y arrancar el servicio de Docker
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Instalar kubectl (usando get_url y file)
      ansible.builtin.get_url:
        url: "https://dl.k8s.io/release/v{{ k8s_version }}/bin/linux/amd64/kubectl"
        dest: "/usr/local/bin/kubectl"
        mode: '0755'
        force: yes

    - name: Instalar Minikube (usando get_url y file)
      ansible.builtin.get_url:
        url: "https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64"
        dest: "/usr/local/bin/minikube"
        mode: '0755'
        force: yes

    - name: Instalar eksctl (solución al problema de la URL)
      block:
        - name: Obtener el nombre del sistema operativo (uname -s)
          ansible.builtin.command: uname -s
          register: uname_output
          changed_when: false

        - name: Descargar el archivo comprimido de eksctl
          ansible.builtin.get_url:
            url: "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_{{ uname_output.stdout }}_amd64.tar.gz"
            dest: "/tmp/eksctl.tar.gz"
            force: yes
        
        - name: Descomprimir eksctl
          ansible.builtin.unarchive:
            src: "/tmp/eksctl.tar.gz"
            dest: "/usr/local/bin"
            remote_src: yes
            extra_opts: ['--strip-components=0']

    - name: Instalar Helm (usando get_url y unarchive)
      block:
        - name: Descargar el archivo comprimido de Helm
          ansible.builtin.get_url:
            url: "https://get.helm.sh/helm-v3.13.2-linux-amd64.tar.gz"
            dest: "/tmp/helm.tar.gz"
            force: yes
            timeout: 300 
          tags:
            - helm
        
        - name: Descomprimir Helm
          ansible.builtin.unarchive:
            src: "/tmp/helm.tar.gz"
            dest: "/usr/local/bin"
            extra_opts: ['--strip-components=1']
            remote_src: yes

    - name: Crear la carpeta src en /vagrant
      ansible.builtin.file:
        path: /vagrant/src
        state: directory
        owner: vagrant
        group: vagrant